{"ast":null,"code":"import _slicedToArray from \"/Users/work/www/flatiron/mod-6/rts-labs/hacker-news-redux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/work/www/flatiron/mod-6/rts-labs/hacker-news-redux/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport SearchForm from \"./components/SearchForm\";\nimport SearchResults from \"./components/SearchResults\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addQuery } from \"./actions\";\nimport \"./App.css\";\nconst numResults = 5;\nconst API = \"http://hn.algolia.com/api/v1/search\";\nconst FRONT_PAGE_STORIES = \"\".concat(API, \"?tags=front_page&hitsPerPage=\").concat(numResults); // const LATEST_STORIES = `${API}_by_date?tags=story&hitsPerPage=${numResults}`;\n\nconst App = () => {\n  const queries = useSelector(redux => redux.queries);\n  const dispatch = useDispatch();\n\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        stories = _useState2[0],\n        setStories = _useState2[1];\n\n  const fetchStories = async request => {\n    const res = await fetch(request);\n    res.json().then(res => setStories(res));\n  };\n\n  const search = query => {\n    fetchStories(\"\".concat(API, \"?query=\").concat(query, \"&tags=story&hitsPerPage=\").concat(numResults, \"&page=1\"));\n    dispatch(addQuery(query));\n  };\n\n  useEffect(() => {\n    fetchStories(FRONT_PAGE_STORIES);\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Top Stories\"), \" \", React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Latest Stories\"), \";\", React.createElement(SearchForm, {\n    search: search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), stories.hits ? React.createElement(SearchResults, {\n    stories: stories,\n    queries: queries,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }) : \"Loading\");\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/work/www/flatiron/mod-6/rts-labs/hacker-news-redux/src/App.js"],"names":["React","useState","useEffect","SearchForm","SearchResults","useSelector","useDispatch","addQuery","numResults","API","FRONT_PAGE_STORIES","App","queries","redux","dispatch","stories","setStories","fetchStories","request","res","fetch","json","then","search","query","hits"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,WAAzB;AAEA,OAAO,WAAP;AAEA,MAAMC,UAAU,GAAG,CAAnB;AACA,MAAMC,GAAG,GAAG,qCAAZ;AACA,MAAMC,kBAAkB,aAAMD,GAAN,0CAAyCD,UAAzC,CAAxB,C,CACA;;AAEA,MAAMG,GAAG,GAAG,MAAM;AAChB,QAAMC,OAAO,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B;AACA,QAAME,QAAQ,GAAGR,WAAW,EAA5B;;AAFgB,oBAIcL,QAAQ,CAAC,EAAD,CAJtB;AAAA;AAAA,QAITc,OAJS;AAAA,QAIAC,UAJA;;AAMhB,QAAMC,YAAY,GAAG,MAAMC,OAAN,IAAiB;AACpC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,OAAD,CAAvB;AACAC,IAAAA,GAAG,CAACE,IAAJ,GAAWC,IAAX,CAAgBH,GAAG,IAAIH,UAAU,CAACG,GAAD,CAAjC;AACD,GAHD;;AAKA,QAAMI,MAAM,GAAGC,KAAK,IAAI;AACtBP,IAAAA,YAAY,WACPR,GADO,oBACMe,KADN,qCACsChB,UADtC,aAAZ;AAGAM,IAAAA,QAAQ,CAACP,QAAQ,CAACiB,KAAD,CAAT,CAAR;AACD,GALD;;AAOAtB,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,YAAY,CAACP,kBAAD,CAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,OAC+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAD/B,OAEE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAEa,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIGR,OAAO,CAACU,IAAR,GACC,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEV,OAAxB;AAAiC,IAAA,OAAO,EAAEH,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,SAPJ,CADF;AAYD,CAlCD;;AAoCA,eAAeD,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SearchForm from \"./components/SearchForm\";\nimport SearchResults from \"./components/SearchResults\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addQuery } from \"./actions\";\n\nimport \"./App.css\";\n\nconst numResults = 5;\nconst API = \"http://hn.algolia.com/api/v1/search\";\nconst FRONT_PAGE_STORIES = `${API}?tags=front_page&hitsPerPage=${numResults}`;\n// const LATEST_STORIES = `${API}_by_date?tags=story&hitsPerPage=${numResults}`;\n\nconst App = () => {\n  const queries = useSelector(redux => redux.queries);\n  const dispatch = useDispatch();\n\n  const [stories, setStories] = useState({});\n\n  const fetchStories = async request => {\n    const res = await fetch(request);\n    res.json().then(res => setStories(res));\n  };\n\n  const search = query => {\n    fetchStories(\n      `${API}?query=${query}&tags=story&hitsPerPage=${numResults}&page=1`\n    );\n    dispatch(addQuery(query));\n  };\n\n  useEffect(() => {\n    fetchStories(FRONT_PAGE_STORIES);\n  }, []);\n\n  return (\n    <div>\n      <button>Top Stories</button> <button>Latest Stories</button>;\n      <SearchForm search={search} />\n      <hr />\n      {stories.hits ? (\n        <SearchResults stories={stories} queries={queries} />\n      ) : (\n        \"Loading\"\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}